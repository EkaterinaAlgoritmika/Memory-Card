from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import *
from random import *
from random import shuffle

#класс для создания вопроса
class Q():
    def __init__(self, question, right_answer, wrong1, wrong2, wrong3):
        self.question = question
        self.right_answer = right_answer
        self.wrong1 = wrong1
        self.wrong2 = wrong2
        self.wrong3 = wrong3
#Добавляем вопросы с помощью списка
questions_list = [] 
questions_list.append(Q('Государственный язык Бразилии?', 'Португальский', 'Английский', 'Испанский', 'Бразильский'))
questions_list.append(Q('Какого цвета нет на флаге России?', 'Зелёный', 'Красный', 'Белый', 'Синий'))

app = QApplication([])
main_win = QWidget()
main_win.setWindowTitle('Memory Card')

Button = QPushButton('Ответить') 
Question = QLabel('Какой национальности не существует?')
RadioGroupBox = QGroupBox('Варианты ответов')
btn_1 = QRadioButton('Японцы')
btn_2 = QRadioButton('Смурфы')
btn_3 = QRadioButton('Чулымцы')
btn_4 = QRadioButton('Алеуты')

RadioGroup = QButtonGroup() 
RadioGroup.addButton(btn_1)
RadioGroup.addButton(btn_2)
RadioGroup.addButton(btn_3)
RadioGroup.addButton(btn_4)

RadioGroup = QButtonGroup() 
RadioGroup.addButton(btn_1)
RadioGroup.addButton(btn_2)
RadioGroup.addButton(btn_3)
RadioGroup.addButton(btn_4)

layout_ans1 = QHBoxLayout()   
layout_ans2 = QVBoxLayout() 
layout_ans3 = QVBoxLayout()
layout_ans2.addWidget(btn_1) 
layout_ans2.addWidget(btn_2)
layout_ans3.addWidget(btn_3) 
layout_ans3.addWidget(btn_4)
layout_ans1.addLayout(layout_ans2)
layout_ans1.addLayout(layout_ans3)
RadioGroupBox.setLayout(layout_ans1)

line1 = QHBoxLayout() 
line2 = QHBoxLayout() 
line3 = QHBoxLayout() 
line1.addWidget(Question, alignment = Qt.AlignVCenter)
line2.addWidget(RadioGroupBox)

line3.addStretch(1)
line3.addWidget(Button, stretch=4)
line3.addStretch(1)

layout_card = QVBoxLayout()
layout_card.addLayout(line1)
layout_card.addLayout(line2)
layout_card.addLayout(line3)

AnsGroupBox = QGroupBox('Результат теста')
Result = QLabel('прав ты или нет?') 
Correct = QLabel('ответ будет тут!')

layout_res = QVBoxLayout()
layout_res.addWidget(Result, alignment=Qt.AlignTop)
layout_res.addWidget(Correct, alignment=Qt.AlignHCenter)
AnsGroupBox.setLayout(layout_res)

layout_line1 = QHBoxLayout() 
layout_line2 = QHBoxLayout()
layout_line3 = QHBoxLayout()


layout_line1.addWidget(Question, alignment=Qt.AlignHCenter)

layout_line2.addWidget(RadioGroupBox)   
layout_line2.addWidget(AnsGroupBox)  
RadioGroupBox.hide()

layout_line3.addStretch(1)
layout_line3.addWidget(Button, stretch=4)
layout_line3.addStretch(1)

layout_card = QVBoxLayout()
layout_card.addLayout(layout_line1)
layout_card.addLayout(layout_line2)
layout_card.addLayout(layout_line3)
main_win.setLayout(layout_card)

def show_result():
    RadioGroupBox.hide()
    AnsGroupBox.show()
    Button.setText('Следующий вопрос')

def show_question():
    RadioGroupBox.show()
    AnsGroupBox.hide()
    Button.setText('Ответить')
    RadioGroup.setExclusive(False) 
    btn_1.setChecked(False)
    btn_2.setChecked(False)
    btn_3.setChecked(False)
    btn_4.setChecked(False)
    RadioGroup.setExclusive(True) 



answers = [btn_1, btn_2, btn_3, btn_4]

#записываем значения вопросов и ответов в виджеты
def ask(q: Q):
    shuffle(answers)
    answers[0].setText(q.right_answer)
    answers[1].setText(q.wrong1)
    answers[2].setText(q.wrong2)
    answers[3].setText(q.wrong3)
    Question.setText(q.question)
    Correct.setText(q.right_answer) 
    show_question() 
def show_correct(res):
    Result.setText(res)
    show_result()





#Добавляем вывод статистики
def check_answer():
    if answers[0].isChecked():
        show_correct('Верно!')
        main_win.score += 1
        print('Статистика\nВсего вопросов: ', main_win.total, '\nПравильных ответов: ', main_win.score)
        print('Рейтинг: ', (main_win.score/main_win.total*100), '%')

    else:
        if answers[1].isChecked() or answers[2].isChecked() or answers[3].isChecked():
            show_correct('Неверно!')
            print('Рейтинг: ', (main_win.score/main_win.total*100), '%')

#Создаем рандомный вывод вопроса
def next_question():
    main_win.total += 1
    print('Статистика\nВсего вопросов: ', main_win.total, '\nПравильных ответов: ', main_win.score)
    cur_question = randint(0, len(questions_list) - 1)
    q = questions_list[cur_question]
    ask(q)

def click_OK():
    if Button.text() == 'Ответить':
        check_answer() # проверка ответа
    else:
        next_question() # следующий вопрос


main_win.score = 0 #Кол-во всех вопросов
main_win.total = 0 #Кол-во верных ответов
next_question()


Button.clicked.connect(click_OK) 
main_win.show()
app.exec_()

